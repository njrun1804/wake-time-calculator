name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Sanity check: ensure developer scripts don't mask failures
  script-sanity:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check scripts for '|| true'
        run: |
          set -euo pipefail
          matches=$(grep -R --line-number --exclude='setup-dev.sh' -F '|| true' scripts/ || true)

          if [ -n "$matches" ]; then
            echo "$matches"
            echo "Found '|| true' in scripts/ (excluding setup-dev.sh) — this can mask failures in CI."
            exit 1
          fi

          echo "✓ No unexpected '|| true' found in scripts/"

  validate:
    runs-on: ubuntu-latest
    needs: script-sanity
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      # Enforce pre-commit parity: same validation as husky/lint-staged
      - name: Lint, validate HTML, and run unit tests
        run: npm run validate:all

  visual-tests:
    runs-on: ubuntu-latest
    needs: validate
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Cache Playwright browsers
        uses: actions/cache@v4
        with:
          path: ~/.cache/ms-playwright
          key: playwright-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: playwright-${{ runner.os }}-

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium firefox webkit

      - name: Run visual regression tests
        run: npm run test:visual

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: visual-test-results
          path: test-results/
          retention-days: 7

  safari-tests:
    runs-on: macos-latest
    needs: validate
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Cache Playwright WebKit
        uses: actions/cache@v4
        with:
          path: ~/Library/Caches/ms-playwright
          key: playwright-webkit-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: playwright-webkit-${{ runner.os }}-

      - name: Install Playwright WebKit
        run: npx playwright install webkit

      - name: Run Safari tests
        run: npm run test:ci -- --project=webkit

      - name: Upload test report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: safari-test-results
          path: playwright-report/
          retention-days: 7

  pr-comment:
    runs-on: ubuntu-latest
    needs: [ validate, visual-tests, safari-tests ]
    if: failure() && github.event_name == 'pull_request'
    permissions:
      pull-requests: write
    steps:
      - name: Post PR comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ⚠️ **CI checks failed**

            Please run locally and fix issues:
            ```bash
            npm run validate:all
            npm run test:visual
            npm run test:ci
            ```
